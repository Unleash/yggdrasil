namespace messaging;

table PropertyEntry {
  key: string (key);
  value: string;
}

table ContextMessage {
  toggle_name: string;
  user_id: string;
  session_id: string;
  environment: string;
  app_name: string;
  current_time: string;
  remote_address: string;
  runtime_hostname: string;
  properties: [PropertyEntry];
  custom_strategies_results: [CustomStrategyResult];
}

table CustomStrategyResult {
  key: string (key);
  value: bool;
}

table Response {
  enabled: bool;
  impression_data: bool;
  has_enabled: bool = false;
  error: string;
}

table Variant {
  enabled: bool;
  impression_data: bool;
  feature_enabled: bool;
  name: string;
  payload: VariantPayload;
  error: string;
}

table VariantPayload {
  //this is fine for data transfer but the SDK expects 'type' not 'payload_type'
  payload_type: string;
  value: string;
}

table VariantEntry {
  key: string;
  value: uint;
}

table ToggleStats {
  no: uint = 0;
  yes: uint = 0;
  variants: [VariantEntry];
}

table CoreVersion {
  version: string;
}

table BuiltInStrategies {
  values: [string];
}

table ToggleEntry {
  key: string;
  value: ToggleStats;
}

table MetricsResponse {
  // Representing DateTime<Utc> as UNIX timestamp in milliseconds
  start: long;
  stop: long;
  toggles: [ToggleEntry];
}

table TakeStateResponse {
  warnings: [string];
  error: string;
}

table FeatureDef {
  name: string;
  type: string;
  project: string;
  enabled: bool;
}

table FeatureDefs {
  items: [FeatureDef];
}

root_type Response;
root_type ContextMessage;
root_type MetricsResponse;