---
name: Publish Java Engine
on:
  push:
    tags:
      - "java-engine-*"
  workflow_dispatch:

jobs:
  release-linux:
    if: startsWith(github.ref, 'refs/tags/java-engine')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Build Rust library for linux
        run: |
          cargo build --release
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: 21
          cache: "gradle"
          distribution: "temurin"
      - name: Deploy release
        uses: burrunan/gradle-cache-action@v1
        env:
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingPassphrase: ${{ secrets.GPG_PASSPHRASE }}
        with:
          job-id: release-linux
          arguments: publishToSonatype closeAndReleaseSonatypeStagingRepository
          build-root-directory: java-engine

  release-windows:
    if: startsWith(github.ref, 'refs/tags/java-engine')
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Build Rust Library for Windows
        run: |
          cd yggdrasilffi
          cargo build --release --target x86_64-pc-windows-gnu
        working-directory: ${{ github.workspace }}
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: 21
          cache: "gradle"
          distribution: "temurin"

      - name: Deploy release
        uses: burrunan/gradle-cache-action@v1
        env:
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingPassphrase: ${{ secrets.GPG_PASSPHRASE }}
        with:
          job-id: release-linux
          arguments: publishToSonatype closeAndReleaseSonatypeStagingRepository
          build-root-directory: java-engine

  release-macos:
    if: startsWith(github.ref, 'refs/tags/java-engine')
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: Build Rust Library for macOS
        run: |
          cd yggdrasilffi
          cargo build --release --target x86_64-apple-darwin
        working-directory: ${{ github.workspace }}
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: 21
          cache: "gradle"
          distribution: "temurin"
      - name: Deploy release
        uses: burrunan/gradle-cache-action@v1
        env:
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingPassphrase: ${{ secrets.GPG_PASSPHRASE }}
        with:
          job-id: release-linux
          arguments: publishToSonatype closeAndReleaseSonatypeStagingRepository
          build-root-directory: java-engine
