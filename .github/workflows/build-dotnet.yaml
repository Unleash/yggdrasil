---
name: .NET Build

on:
  push:
    branches:
      - main
    paths:
      - "dotnet-engine/**"
      # Build in main if anything changes in yggdrasil or the ffi layer
      - "unleash-yggdrasil/src/**.rs"
      - "yggdrasilffi/src/**.rs"
  pull_request:
    branches:
      - main
    paths:
      - "dotnet-engine/**"

jobs:
  build-binaries:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary: libyggdrasilffi.so
          - os: windows-latest
            target: x86_64-pc-windows-gnu
            binary: yggdrasilffi.dll
          - os: macos-latest
            target: x86_64-apple-darwin
            binary: libyggdrasilffi.dylib

    steps:
      - uses: actions/checkout@v4

      - name: Install rust
        run: |
          rustup set auto-self-update disable
          rustup toolchain install stable --profile default
          rustup target add ${{ matrix.target }}
          rustup show

      - name: Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Build yggdrasilffi
        run: |
          cargo build -p yggdrasilffi --release --target ${{ matrix.target }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.binary }}
          path: target/${{ matrix.target }}/release/${{ matrix.binary }}

  build-dotnet:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: linux-x64
            binary: libyggdrasilffi.so
          - os: windows-latest
            arch: win-x64
            binary: yggdrasilffi.dll
          - os: macos-latest
            arch: osx-x64
            binary: libyggdrasilffi.dylib

    needs: build-binaries
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.binary }}
          path: dotnet-engine/runtimes/${{ matrix.arch }}/native

      - name: Get client spec
        uses: actions/checkout@v4
        with:
          repository: Unleash/client-specification
          ref: v5.1.0
          path: client-specification

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "6.0.x"

      - name: Restore dependencies
        run: |
          cd dotnet-engine
          dotnet restore dotnet-engine.sln

      - name: Check formatting
        run: |
          cd dotnet-engine
          dotnet format --verify-no-changes

      - name: Build
        run: |
          cd dotnet-engine
          dotnet build dotnet-engine.sln --configuration Release --no-restore

      - name: Test
        run: |
          cd dotnet-engine/Yggdrasil.Engine.Tests
          dotnet test --no-restore
