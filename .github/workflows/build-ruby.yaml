name: Build Ruby
on:
  push:
    tags:
      - "*"
  pull_request:
    paths:
      - "ruby-engine/**"
jobs:
  compile-rust:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            output: libyggdrasilffi.so
          # - os: windows-latest
          #   target: x86_64-pc-windows-gnu
          #   output: yggdrasilffi.dll
          # - os: macos-latest
          #   target: x86_64-apple-darwin
          #   output: libyggdrasilffi.dylib
    steps:
    - uses: actions/checkout@v2

    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true

    - name: Build Rust Library
      run: |        
        cargo build --release --target ${{ matrix.target }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.output }}
        path: yggdrasilffi/target/${{ matrix.target }}/release/${{ matrix.output }}

  build_linux:
    runs-on: ubuntu-latest
    needs: compile-rust
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Download all Artifacts
        uses: actions/download-artifact@v2
        with:
          path: downloaded-artifacts

      - name: Move Compiled Artifact for Linux
        run: |          
          cp downloaded-artifacts/*.so ruby-engine/lib/          
        working-directory: ${{ github.workspace }}

      - name: Build and Publish Gem for Linux
        run: |
          cd ruby-engine
          gem build yggdrasil-engine.gemspec
          
        working-directory: ${{ github.workspace }}
        env:
          GEM_HOST_API_KEY: ${{ secrets.GEMS_PUBLISH_KEY }}
  # build_windows:
  #   runs-on: windows-latest
  #   needs: compile-rust    
  #   strategy:
  #     matrix:
  #       target:
  #         - x86_64-pc-windows-gnu
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         profile: minimal
  #         override: true

  #     - name: Build Rust Library for Windows
  #       run: |
  #         cd yggdrasilffi
  #         cargo build --release --target x86_64-pc-windows-gnu
  #       working-directory: ${{ github.workspace }}

  #     - name: Move Compiled Artifact for Windows
  #       run: |          
  #         Copy-Item target/x86_64-pc-windows-gnu/release/yggdrasilffi.dll ruby-engine/lib/
  #       working-directory: ${{ github.workspace }}

  #     - name: Build and Publish Gem for Windows
  #       run: |
  #         cd ruby-engine
  #         gem build yggdrasil-engine.gemspec
  #         gem push *.gem
  #       working-directory: ${{ github.workspace }}
  #       env:
  #         GEM_HOST_API_KEY: ${{ secrets.GEMS_PUBLISH_KEY }}
  # build_macos:
  #   runs-on: macos-latest
  #   needs: compile-rust    
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Override MacOS Build Platform
  #       run: echo "YGG_BUILD_PLATFORM=universal-darwin" >> $GITHUB_ENV
         
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         profile: minimal
  #         override: true
      
  #     - name: Build Rust Library for macOS
  #       run: |
  #         cd yggdrasilffi
  #         cargo build --release --target x86_64-apple-darwin
  #       working-directory: ${{ github.workspace }}

  #     - name: Move Compiled Artifact for macOS
  #       run: |
  #         cp target/x86_64-apple-darwin/release/libyggdrasilffi.dylib ruby-engine/lib/
  #       working-directory: ${{ github.workspace }}

  #     - name: Build and Publish Gem for macOS
  #       run: |
  #         cd ruby-engine
  #         gem build yggdrasil-engine.gemspec
  #         gem push *.gem
  #       working-directory: ${{ github.workspace }}
  #       env:
  #         GEM_HOST_API_KEY: ${{ secrets.GEMS_PUBLISH_KEY }}
  # build_jruby:
  #   runs-on: ubuntu-latest
  #   needs: compile-rust    
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Override JRuby Build Platform
  #       run: echo "YGG_BUILD_PLATFORM=java" >> $GITHUB_ENV

  #     - name: Set up JRuby
  #       uses: ruby/setup-ruby@v1
  #       with:
  #         ruby-version: jruby
  #         java-version: 11 #

  #     - name: Build Rust Library for macOS
  #       run: |
  #         cd yggdrasilffi
  #         cargo build --release --target x86_64-unknown-linux-gnu

  #     - name: Move Compiled Artifact for JRuby
  #       run: |          
  #         cp target/x86_64-unknown-linux-gnu/release/libyggdrasilffi.so ruby-engine/lib
  #       working-directory: ${{ github.workspace }}

  #     - name: Build and Publish Gem for JRuby
  #       run: |
  #         cd ruby-engine
  #         gem build yggdrasil-engine.gemspec
  #       working-directory: ${{ github.workspace }}
  #       env:
  #         GEM_HOST_API_KEY: ${{ secrets.GEMS_PUBLISH_KEY }}