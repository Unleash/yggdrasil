---
name: .NET Publish

on:
  # TODO: For testing purposes only. Remove this before merging.
  pull_request:
    branches:
      - main

  workflow_dispatch:

jobs:
  # TODO: Consider making this its own workflow to be reused by other workflows.
  build-binaries:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            rid: linux-x64
            output: libyggdrasilffi.so
          # - os: ubuntu-latest
          #   target: aarch64-unknown-linux-gnu
          #   rid: linux-arm64
          #   output: libyggdrasilffi.so
          - os: windows-latest
            target: x86_64-pc-windows-gnu
            rid: win-x64
            output: yggdrasilffi.dll
          # - os: windows-latest
          #   target: aarch64-pc-windows-gnu
          #   rid: win-arm64
          #   output: yggdrasilffi.dll
          - os: macos-latest
            target: x86_64-apple-darwin
            rid: osx-x64
            output: libyggdrasilffi.dylib
          # - os: macos-latest
          #   target: aarch64-apple-darwin
          #   rid: osx-arm64
          #   output: libyggdrasilffi.dylib

    steps:
      - uses: actions/checkout@v4

      - name: Install rust
        run: |
          rustup set auto-self-update disable
          rustup toolchain install stable --profile default
          rustup target add ${{ matrix.target }}
          rustup show

      - name: Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Build yggdrasilffi
        run: |
          cargo build -p yggdrasilffi --release --target ${{ matrix.target }}

      - name: Upload yggdrasilffi binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.rid }}
          path: target/${{ matrix.target }}/release/${{ matrix.output }}

      - name: Set artifact names output
        run: echo "artifact_name=${{ matrix.rid }}" >> $GITHUB_ENV

  publish:
    needs: build-binaries
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download yggdrasilffi binaries
        run: |
          rids=(linux-x64 linux-arm64 win-x64 win-arm64 osx-x64 osx-arm64)
          for rid in "${rids[@]}"; do
            echo "Attempting to download artifact for $rid"
            if ! gh run download ${{ github.run_id }} --name "$rid" --dir "dotnet-engine/runtimes/$rid/native"; then
              echo "Artifact for $rid not found, continuing..."
            fi
          done

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Restore dependencies
        run: |
          cd dotnet-engine
          dotnet restore dotnet-engine.sln

      - name: Build
        run: |
          cd dotnet-engine
          dotnet build dotnet-engine.sln -c Release --no-restore

      - name: Pack
        run: |
          cd dotnet-engine
          dotnet pack dotnet-engine.sln -c Release --no-build --no-restore

      - name: Check package size
        run: |
          cd dotnet-engine
          ls -lh Yggdrasil.Engine/bin/Release/*.nupkg

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: nuget-package
          path: Yggdrasil.Engine/bin/Release/*.nupkg
