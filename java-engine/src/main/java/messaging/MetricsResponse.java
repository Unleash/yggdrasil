// automatically generated by the FlatBuffers compiler, do not modify

package messaging;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class MetricsResponse extends Table {
  public static void ValidateVersion() {
    Constants.FLATBUFFERS_23_1_21();
  }

  public static MetricsResponse getRootAsMetricsResponse(ByteBuffer _bb) {
    return getRootAsMetricsResponse(_bb, new MetricsResponse());
  }

  public static MetricsResponse getRootAsMetricsResponse(ByteBuffer _bb, MetricsResponse obj) {
    _bb.order(ByteOrder.LITTLE_ENDIAN);
    return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb));
  }

  public void __init(int _i, ByteBuffer _bb) {
    __reset(_i, _bb);
  }

  public MetricsResponse __assign(int _i, ByteBuffer _bb) {
    __init(_i, _bb);
    return this;
  }

  public long start() {
    int o = __offset(4);
    return o != 0 ? bb.getLong(o + bb_pos) : 0L;
  }

  public long stop() {
    int o = __offset(6);
    return o != 0 ? bb.getLong(o + bb_pos) : 0L;
  }

  public messaging.ToggleEntry toggles(int j) {
    return toggles(new messaging.ToggleEntry(), j);
  }

  public messaging.ToggleEntry toggles(messaging.ToggleEntry obj, int j) {
    int o = __offset(8);
    return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null;
  }

  public int togglesLength() {
    int o = __offset(8);
    return o != 0 ? __vector_len(o) : 0;
  }

  public messaging.ToggleEntry.Vector togglesVector() {
    return togglesVector(new messaging.ToggleEntry.Vector());
  }

  public messaging.ToggleEntry.Vector togglesVector(messaging.ToggleEntry.Vector obj) {
    int o = __offset(8);
    return o != 0 ? obj.__assign(__vector(o), 4, bb) : null;
  }

  public static int createMetricsResponse(
      FlatBufferBuilder builder, long start, long stop, int togglesOffset) {
    builder.startTable(3);
    MetricsResponse.addStop(builder, stop);
    MetricsResponse.addStart(builder, start);
    MetricsResponse.addToggles(builder, togglesOffset);
    return MetricsResponse.endMetricsResponse(builder);
  }

  public static void startMetricsResponse(FlatBufferBuilder builder) {
    builder.startTable(3);
  }

  public static void addStart(FlatBufferBuilder builder, long start) {
    builder.addLong(0, start, 0L);
  }

  public static void addStop(FlatBufferBuilder builder, long stop) {
    builder.addLong(1, stop, 0L);
  }

  public static void addToggles(FlatBufferBuilder builder, int togglesOffset) {
    builder.addOffset(2, togglesOffset, 0);
  }

  public static int createTogglesVector(FlatBufferBuilder builder, int[] data) {
    builder.startVector(4, data.length, 4);
    for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]);
    return builder.endVector();
  }

  public static void startTogglesVector(FlatBufferBuilder builder, int numElems) {
    builder.startVector(4, numElems, 4);
  }

  public static int endMetricsResponse(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static void finishMetricsResponseBuffer(FlatBufferBuilder builder, int offset) {
    builder.finish(offset);
  }

  public static void finishSizePrefixedMetricsResponseBuffer(
      FlatBufferBuilder builder, int offset) {
    builder.finishSizePrefixed(offset);
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) {
      __reset(_vector, _element_size, _bb);
      return this;
    }

    public MetricsResponse get(int j) {
      return get(new MetricsResponse(), j);
    }

    public MetricsResponse get(MetricsResponse obj, int j) {
      return obj.__assign(__indirect(__element(j), bb), bb);
    }
  }
}
