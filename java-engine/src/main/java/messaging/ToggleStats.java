// automatically generated by the FlatBuffers compiler, do not modify

package messaging;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class ToggleStats extends Table {
  public static void ValidateVersion() {
    Constants.FLATBUFFERS_25_2_10();
  }

  public static ToggleStats getRootAsToggleStats(ByteBuffer _bb) {
    return getRootAsToggleStats(_bb, new ToggleStats());
  }

  public static ToggleStats getRootAsToggleStats(ByteBuffer _bb, ToggleStats obj) {
    _bb.order(ByteOrder.LITTLE_ENDIAN);
    return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb));
  }

  public void __init(int _i, ByteBuffer _bb) {
    __reset(_i, _bb);
  }

  public ToggleStats __assign(int _i, ByteBuffer _bb) {
    __init(_i, _bb);
    return this;
  }

  public long no() {
    int o = __offset(4);
    return o != 0 ? (long) bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L;
  }

  public long yes() {
    int o = __offset(6);
    return o != 0 ? (long) bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L;
  }

  public messaging.VariantEntry variants(int j) {
    return variants(new messaging.VariantEntry(), j);
  }

  public messaging.VariantEntry variants(messaging.VariantEntry obj, int j) {
    int o = __offset(8);
    return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null;
  }

  public int variantsLength() {
    int o = __offset(8);
    return o != 0 ? __vector_len(o) : 0;
  }

  public messaging.VariantEntry.Vector variantsVector() {
    return variantsVector(new messaging.VariantEntry.Vector());
  }

  public messaging.VariantEntry.Vector variantsVector(messaging.VariantEntry.Vector obj) {
    int o = __offset(8);
    return o != 0 ? obj.__assign(__vector(o), 4, bb) : null;
  }

  public static int createToggleStats(
      FlatBufferBuilder builder, long no, long yes, int variantsOffset) {
    builder.startTable(3);
    ToggleStats.addVariants(builder, variantsOffset);
    ToggleStats.addYes(builder, yes);
    ToggleStats.addNo(builder, no);
    return ToggleStats.endToggleStats(builder);
  }

  public static void startToggleStats(FlatBufferBuilder builder) {
    builder.startTable(3);
  }

  public static void addNo(FlatBufferBuilder builder, long no) {
    builder.addInt(0, (int) no, (int) 0L);
  }

  public static void addYes(FlatBufferBuilder builder, long yes) {
    builder.addInt(1, (int) yes, (int) 0L);
  }

  public static void addVariants(FlatBufferBuilder builder, int variantsOffset) {
    builder.addOffset(2, variantsOffset, 0);
  }

  public static int createVariantsVector(FlatBufferBuilder builder, int[] data) {
    builder.startVector(4, data.length, 4);
    for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]);
    return builder.endVector();
  }

  public static void startVariantsVector(FlatBufferBuilder builder, int numElems) {
    builder.startVector(4, numElems, 4);
  }

  public static int endToggleStats(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) {
      __reset(_vector, _element_size, _bb);
      return this;
    }

    public ToggleStats get(int j) {
      return get(new ToggleStats(), j);
    }

    public ToggleStats get(ToggleStats obj, int j) {
      return obj.__assign(__indirect(__element(j), bb), bb);
    }
  }
}
